/*
 * Decompiled with CFR 0.153-SNAPSHOT (d6f6758-dirty).
 */
package fun.kubik.helpers.module.interfaces;

import com.mojang.blaze3d.matrix.MatrixStack;
import fun.kubik.Load;
import fun.kubik.events.main.EventUpdate;
import fun.kubik.events.main.render.EventRender2D;
import fun.kubik.helpers.animation.Animation;
import fun.kubik.helpers.animation.EasingList;
import fun.kubik.helpers.render.ColorHelpers;
import fun.kubik.managers.draggable.api.Component;
import fun.kubik.modules.render.Interface;
import net.minecraft.util.math.vector.Vector2f;
import net.minecraft.client.gui.screen.ChatScreen;

public class Information
        extends Component {
    private final Animation chatOpenAnimation = new Animation(); // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–¥—ä–µ–º–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞
    
    public Information() {
        super("Information", new Vector2f(350.0f, 46.0f), 145.0f, 66.0f);
        this.getDraggableOption().settings(this.getDesign(), this.getCompression());

    }

    @Override
    public void update(EventUpdate event) {
        boolean show = ((Interface)Load.getInstance().getHooks().getModuleManagers().findClass(Interface.class)).getElements().getSelected("Information") && ((Interface)Load.getInstance().getHooks().getModuleManagers().findClass(Interface.class)).isToggled();
        this.getShowAnimation().update(show);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–¥—ä–µ–º–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞
        boolean chatOpen = Information.mc.currentScreen instanceof ChatScreen;
        this.chatOpenAnimation.update(chatOpen);
    }
    @Override
    public void render(EventRender2D.Pre event) {
        MatrixStack matrixStack = event.getMatrixStack();
        this.getShowAnimation().animate(0.0f, 1.0f, 0.2f, EasingList.CIRC_OUT, Information.mc.getTimer().renderPartialTicks);
        
        if (this.getShowAnimation().getAnimationValue() > 0.1) {
            // üìç –ü–û–ó–ò–¶–ò–Ø —Å –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π –ø–æ–¥—ä–µ–º–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞
            float x = 10.0f; // –õ–µ–≤—ã–π –∫—Ä–∞–π
            float baseY = Information.mc.getMainWindow().getHeight() - 60.0f; // –ë–∞–∑–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è—è
            
            // üîÑ –ü–õ–ê–í–ù–ê–Ø –∞–Ω–∏–º–∞—Ü–∏—è –ø–æ–¥—ä–µ–º–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞
            this.chatOpenAnimation.animate(0.0f, 1.0f, 0.15f, EasingList.CIRC_OUT, Information.mc.getTimer().renderPartialTicks);
            float offsetY = -20.0f * this.chatOpenAnimation.getAnimationValue(); // –ü–ª–∞–≤–Ω–æ –ø–æ–¥–Ω–∏–º–∞–µ–º –Ω–∞ 40px
            float y = baseY + offsetY;
            
            // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ: —Ä–∞–∑–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–ª–∏–≤–∞—é—â–∏–µ—Å—è —Å–ª–æ–≤–∞ –æ—Ç —á–∏—Å–µ–ª
            String ticksValue = String.format("%.1f", Information.mc.getTimer().speed * 20.0f);
            String bpsValue = String.format("%.2f", Interface.calculateBPS());
            
            // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            int worldX = (int)Information.mc.player.getPosX();
            int worldY = (int)Information.mc.player.getPosY();
            int worldZ = (int)Information.mc.player.getPosZ();
            
            // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∞–¥–∞ (–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ 8)
            int netherX = worldX / 8;
            int netherZ = worldZ / 8;
            
            String coordsMain = " " + worldX + ", " + worldY + ", " + worldZ + " ";
            String coordsNether = "(" + netherX + "," + worldY + "," + netherZ + ")";
            
            // –¶–≤–µ—Ç–∞
            int whiteColor = ColorHelpers.rgba(255, 255, 255, (int)(255.0f * this.getShowAnimation().getAnimationValue())); // –ë–µ–ª—ã–π –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π
            int greenColor = ColorHelpers.rgba(100, 255, 100, (int)(255.0f * this.getShowAnimation().getAnimationValue()));
            int redColor = ColorHelpers.rgba(255, 100, 100, (int)(255.0f * this.getShowAnimation().getAnimationValue()));
            
            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
            float fontSize = 14.0f;
            float lineHeight = 16.0f;
            float time = (float)(System.currentTimeMillis() % 2000) / 2000.0f;
            
            // üåà –ü–ï–†–ï–õ–ò–í–ê–Æ–©–ò–ô–°–Ø "TICKS" + –æ–±—ã—á–Ω–æ–µ —á–∏—Å–ª–æ
            float currentX = x;
            float currentY = y;
            String ticksLabel = "Ticks";
            
            for (int i = 0; i < ticksLabel.length(); i++) {
                float wave = (float)Math.sin(time * Math.PI * 2 + i * 0.3f) * 0.5f + 0.5f;
                int charColor = ColorHelpers.rgba(
                    (int)(ColorHelpers.getRed(ColorHelpers.getThemeColor(1)) * (1 - wave) + ColorHelpers.getRed(ColorHelpers.getThemeColor(2)) * wave),
                    (int)(ColorHelpers.getGreen(ColorHelpers.getThemeColor(1)) * (1 - wave) + ColorHelpers.getGreen(ColorHelpers.getThemeColor(2)) * wave),
                    (int)(ColorHelpers.getBlue(ColorHelpers.getThemeColor(1)) * (1 - wave) + ColorHelpers.getBlue(ColorHelpers.getThemeColor(2)) * wave),
                    255
                );
                sf_semibold.drawText(matrixStack, String.valueOf(ticksLabel.charAt(i)), currentX, currentY, ColorHelpers.setAlpha(charColor, (int)(255.0f * this.getShowAnimation().getAnimationValue())), fontSize);
                currentX += sf_semibold.getWidth(String.valueOf(ticksLabel.charAt(i)), fontSize);
            }
            // –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ TICKS –±–µ–ª—ã–º —Ü–≤–µ—Ç–æ–º
            sf_semibold.drawText(matrixStack, " " + ticksValue, currentX, currentY, whiteColor, fontSize);
            
            // üåà –ü–ï–†–ï–õ–ò–í–ê–Æ–©–ò–ô–°–Ø "BPS" + –æ–±—ã—á–Ω–æ–µ —á–∏—Å–ª–æ
            currentX = x;
            currentY = y + lineHeight;
            String bpsLabel = "BPS";
            
            for (int i = 0; i < bpsLabel.length(); i++) {
                float wave = (float)Math.sin(time * Math.PI * 2 + i * 0.3f + 1.0f) * 0.5f + 0.5f; // –°–º–µ—â–µ–Ω–∏–µ —Ñ–∞–∑—ã
                int charColor = ColorHelpers.rgba(
                    (int)(ColorHelpers.getRed(ColorHelpers.getThemeColor(1)) * (1 - wave) + ColorHelpers.getRed(ColorHelpers.getThemeColor(2)) * wave),
                    (int)(ColorHelpers.getGreen(ColorHelpers.getThemeColor(1)) * (1 - wave) + ColorHelpers.getGreen(ColorHelpers.getThemeColor(2)) * wave),
                    (int)(ColorHelpers.getBlue(ColorHelpers.getThemeColor(1)) * (1 - wave) + ColorHelpers.getBlue(ColorHelpers.getThemeColor(2)) * wave),
                    255
                );
                sf_semibold.drawText(matrixStack, String.valueOf(bpsLabel.charAt(i)), currentX, currentY, ColorHelpers.setAlpha(charColor, (int)(255.0f * this.getShowAnimation().getAnimationValue())), fontSize);
                currentX += sf_semibold.getWidth(String.valueOf(bpsLabel.charAt(i)), fontSize);
            }
            // –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ BPS –±–µ–ª—ã–º —Ü–≤–µ—Ç–æ–º
            sf_semibold.drawText(matrixStack, " " + bpsValue, currentX, currentY, whiteColor, fontSize);
            
            // üåà –ü–ï–†–ï–õ–ò–í–ê–Æ–©–ò–ô–°–Ø "XYZ" + üü¢ –∑–µ–ª–µ–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã + üî¥ –∫—Ä–∞—Å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∞–¥–∞
            currentX = x;
            currentY = y + lineHeight * 2;
            String xyzLabel = "XYZ";
            
            for (int i = 0; i < xyzLabel.length(); i++) {
                float wave = (float)Math.sin(time * Math.PI * 2 + i * 0.3f + 2.0f) * 0.5f + 0.5f; // –ï—â—ë –æ–¥–Ω–æ —Å–º–µ—â–µ–Ω–∏–µ —Ñ–∞–∑—ã
                int charColor = ColorHelpers.rgba(
                    (int)(ColorHelpers.getRed(ColorHelpers.getThemeColor(1)) * (1 - wave) + ColorHelpers.getRed(ColorHelpers.getThemeColor(2)) * wave),
                    (int)(ColorHelpers.getGreen(ColorHelpers.getThemeColor(1)) * (1 - wave) + ColorHelpers.getGreen(ColorHelpers.getThemeColor(2)) * wave),
                    (int)(ColorHelpers.getBlue(ColorHelpers.getThemeColor(1)) * (1 - wave) + ColorHelpers.getBlue(ColorHelpers.getThemeColor(2)) * wave),
                    255
                );
                sf_semibold.drawText(matrixStack, String.valueOf(xyzLabel.charAt(i)), currentX, currentY, ColorHelpers.setAlpha(charColor, (int)(255.0f * this.getShowAnimation().getAnimationValue())), fontSize);
                currentX += sf_semibold.getWidth(String.valueOf(xyzLabel.charAt(i)), fontSize);
            }
            // –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∑–µ–ª–µ–Ω—ã–º
            sf_semibold.drawText(matrixStack, coordsMain, currentX, currentY, greenColor, fontSize);
            currentX += sf_semibold.getWidth(coordsMain, fontSize);
            // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∞–¥–∞ –∫—Ä–∞—Å–Ω—ã–º
            sf_semibold.drawText(matrixStack, coordsNether, currentX, currentY, redColor, fontSize);
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è drag-and-drop (—Ö–æ—Ç—è —ç—Ç–æ —Å—Ç–∞—Ç–∏—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è)
            this.getDraggableOption().setWidth(200.0f);
            this.getDraggableOption().setHeight(50.0f);
        }
    }
}