/*
 * Decompiled with CFR 0.153-SNAPSHOT (d6f6758-dirty).
 */
package fun.kubik.modules.player;

import fun.kubik.events.api.EventHook;
import fun.kubik.events.main.EventUpdate;
import fun.kubik.events.main.input.EventInput;
import fun.kubik.managers.command.main.AutoRegion;
import fun.kubik.managers.module.Module;
import fun.kubik.managers.module.main.Category;
import fun.kubik.managers.module.option.main.BindOption;
import fun.kubik.managers.module.option.main.SelectOption;
import fun.kubik.managers.module.option.main.SelectOptionValue;
import fun.kubik.managers.module.option.main.SliderOption;
import fun.kubik.utils.client.ChatUtils;
import fun.kubik.utils.time.TimerUtils;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import net.minecraft.client.Minecraft;

public class RGExploit
extends Module {
    private final SelectOption vibor = new SelectOption("Mode", 0, new SelectOptionValue("\u041f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044c"), new SelectOptionValue("\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044c"));
    public final SelectOption rgmod = new SelectOption("\u041c\u043e\u0434 \u0420\u0413", 0, new SelectOptionValue("\u0420\u0412"), new SelectOptionValue("\u0414\u0440\u0443\u0433\u043e\u0435"));
    private final BindOption throwKey = new BindOption("\u041a\u043d\u043e\u043f\u043a\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438", -1).visible(() -> this.vibor.getSelected("\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044c"));
    private final SliderOption radius = new SliderOption("\u0420\u0430\u0434\u0438\u0443\u0441 \u0440\u0433", 5.0f, 1.0f, 100.0f).increment(0.01f).visible(() -> this.vibor.getSelected("\u041f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044c"));
    private final Minecraft mc = Minecraft.getInstance();
    private final TimerUtils checkTimer = new TimerUtils();
    private String lastProcessedData = "";

    public RGExploit() {
        super("RGExploit", Category.PLAYER);
        this.settings(this.vibor, this.radius, this.rgmod, this.throwKey);
    }

    @EventHook
    public void key(EventInput event) {
        if (this.vibor.getSelected("\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044c") && event.getKey() == this.throwKey.getKey()) {
            String nickname = this.mc.player.getName().getString();
            int x = (int)this.mc.player.getPosX();
            int y = (int)this.mc.player.getPosY();
            int z = (int)this.mc.player.getPosZ();
            String data = nickname + ":" + x + ":" + y + ":" + z;
            try (FileWriter writer = new FileWriter("rgdata.txt");){
                writer.write(data);
                ChatUtils.addClientMessage("\u00a7a\u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b");
            } catch (IOException ex) {
                ex.printStackTrace();
                ChatUtils.addClientMessage("\u00a7c\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.");
            }
        }
    }

    @EventHook
    public void update(EventUpdate eventUpdate) {
        if (this.checkTimer.hasTimeElapsed(500L) && this.vibor.getSelected("\u041f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044c")) {
            File file = new File("rgdata.txt");
            if (file.exists()) {
                try (BufferedReader reader = new BufferedReader(new FileReader(file));){
                    String line = reader.readLine();
                    if (line != null && line.contains(":")) {
                        if (line.equals(this.lastProcessedData)) {
                            return;
                        }
                        String[] parts = line.split(":");
                        if (parts.length == 4) {
                            String nickname = parts[0];
                            int x = Integer.parseInt(parts[1]);
                            int y = Integer.parseInt(parts[2]);
                            int z = Integer.parseInt(parts[3]);
                            String regionName = "rg_" + System.currentTimeMillis();
                            int radiusVal = ((Float)this.radius.getValue()).intValue();
                            try {
                                new AutoRegion().run(new String[]{".rg", String.valueOf(x), String.valueOf(y), String.valueOf(z), String.valueOf(radiusVal), regionName});
                                ChatUtils.addClientMessage("\u00a7e\u0421\u043e\u0437\u0434\u0430\u043d \u0440\u0435\u0433\u0438\u043e\u043d: " + regionName);
                            } catch (Exception ex) {
                                ex.printStackTrace();
                                ChatUtils.addClientMessage("\u00a7c\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 AutoRg");
                            }
                            new Thread(() -> {
                                try {
                                    Thread.sleep(3000L);
                                    this.mc.execute(() -> {
                                        this.mc.player.sendChatMessage("/rg addowner " + regionName + " " + nickname);
                                        ChatUtils.addClientMessage("\u00a7a\u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d: " + nickname);
                                    });
                                } catch (InterruptedException e1) {
                                    e1.printStackTrace();
                                }
                            }).start();
                            this.lastProcessedData = line;
                        } else {
                            ChatUtils.addClientMessage("\u00a7c\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 rgdata.txt");
                        }
                    } else {
                        ChatUtils.addClientMessage("\u00a7c\u0424\u0430\u0439\u043b \u043f\u0443\u0441\u0442 \u0438\u043b\u0438 \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0451\u043d");
                    }
                    if (!file.delete()) {
                        ChatUtils.addClientMessage("\u00a7c\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0443\u0434\u0430\u043b\u0438\u0442\u044c rgdata.txt");
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                    ChatUtils.addClientMessage("\u00a7c\u041e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u0430.");
                }
            }
            this.checkTimer.reset();
        }
    }
}

